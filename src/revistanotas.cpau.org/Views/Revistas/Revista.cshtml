@using CPAU.RevistaNotas
@using CPAU.RevistaNotas.Models
@using CPAU.RevistaNotas.Models.AutoresViewModel
@model CPAU.RevistaNotas.Models.RevistasViewModels.RevistaViewModel
@section css{
    @if (!string.IsNullOrEmpty(Model.Style))
    {
        <style>@Html.Raw(Model.Style)</style>
    }
}
@{
    var botoneraModel = new BotoneraViewModel { Color1 = Model.Color1 };
}
@Html.Partial("_Botonera", botoneraModel)
<!-- Swiper+Parallax -->
@if (!string.IsNullOrEmpty(Model.Html))
{
    <div style="height:100%; margin:0; padding:0;">
        <div class="container-fluid" style="height:100%; margin:0; padding:0; ">
            <div class="row" style="height: 100%; margin: 0; padding: 0;">
                <div class="col-lg-12" style="height:100%;  margin:0; padding:0; ">
                    <!-- Swiper -->
                    <div class="swiper-container swiper1" style="height:100%;">
                        <div class="parallax-bg" style="background:@Model.Color1;"></div>
                        <div class="swiper-wrapper">
                            @Html.Raw(Model.Html)
                        </div>
                        <!-- Add Pagination -->
                        <div class="swiper-pagination swiper-pagination1 swiper-pagination-white"></div>
                        <!-- Add Arrows -->
                        <div class="swiper-button-next swiper-button-white"></div>
                        <div class="swiper-button-prev swiper-button-white"></div>
                    </div>
                    <!-- /Swiper -->
                </div>
            </div>
        </div>
    </div>
    <!-- /Swiper+Parallax -->
}

<div id="titulo1" style="margin-top:-50px"></div>

<!-- HEADER -->
<header class="intro" style="margin-top:50px">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <h1>#@Model.Numero - @Model.Descripcion</h1>
            </div>
        </div>
    </div>
</header>
<!-- /HEADER -->
<!-- CONTENIDO -->
<article id="content">
    <div class="container-fluid">

        <!-- Visualizaci&oacute;n -->
        <div class="row">
            <div class="col-lg-12" style="margin:0; padding:0;">

                <div class="text-center" style="border-bottom:1px solid #ccc; margin:-20px 0 30px 0; padding:0px 0 50px 0;">
                    <h3>Visualizaci&oacute;n</h3>
                    <p>Eleg&iacute; el m&eacute;todos de visualizaci&oacute;n que te resulte m&aacute;s c&oacute;modo:</p>

                    <div class="btn-group btn-group-lg sidebar" role="group" aria-label="...">
                        <button type="button" class="ancla btn btn-default active"><a href="#titulo2" class="ancla" style="color:#000; text-decoration:none;"><i class="fa fa-globe" aria-hidden="true"></i> Web</a></button>
                        <button type="button" class="btn btn-default" onclick="window.open('http://revistanotas.cpau.org/media/revistanotas/fpb/@Model.Numero');">
                            <img src="@Url.Media("/revistanotas/flippingbook-black.png")" alt="" style="padding-bottom:3px;" /> Flipping Book
                        </button>
                        <button type="button" class="btn btn-default" onclick="window.open('http://revistanotas.cpau.org/media/revistanotas/fpb/@Model.Numero/files/assets/common/downloads/publication.pdf');">
                            <i class="fa fa-file-pdf-o" aria-hidden="true"></i> Descargar PDF
                        </button>
                        @if (!string.IsNullOrEmpty(Model.IssuUrl))
                        {
                            <button type="button" class="btn btn-default" onclick="window.open('@Model.IssuUrl');">
                                <img src="@Url.Media("/revistanotas/issuu-black.svg")" alt="" width="18" style="padding-bottom:2px;" /> Issuu
                            </button>
                        }
                    </div>

                </div>

            </div>
        </div>
        <!-- /Visualizaci&oacute;n -->

        <div id="titulo2" style="margin-top:-50px"></div>

        <!-- Contenido -->
        <div class="row" style="margin-top:50px">
            <div class="col-lg-12">


                <!-- Mixitup -->
                <div class="container">
                    <div class="text-center">
                        <h3>Contenidos</h3>
                        <p>Descubrí los artículos de la revista:</p>

                        <!-- Filtros -->
                        <ul id="filters" class="clearfix">
                            <li><h4>Filtros:&nbsp;&nbsp;</h4></li>
                            <li><a href="#" data-filter="*" class="active">Todos</a></li>
                            @foreach (var tag in Model.Tags)
                            {
                                <li><a href="#" data-filter=".@("f" + tag.Id)">@tag.Nombre</a></li>
                            }
                        </ul>
                        <!-- /Filtros -->
                    </div>

                    <!-- Notas -->
                    <div class="portfolioContenedor" style="padding:0 10px; margin: 0 auto;">
                        @foreach (var contenido in Model.Contenidos)
                        {
                            var codigoContenido = contenido.Contenido.Id + "-" + Utils.SeName(contenido.Contenido.Titulo);

                            var filters = string.Join(" ", contenido.Contenido.Tags.Select(x => "f" + x.Tag.Id));
                            <div style="margin: 5px;" class="portfolio @filters" data-cat="@filters">
                                <div class="portfolio-wrapper">
                                    @{
                                        var target = string.IsNullOrEmpty(contenido.Contenido.Url) ? Url.Action("Contenido", new { contenido.Revista.Numero, codigoContenido }) : contenido.Contenido.Url;
                                    }
                                    <a href="@target" target="@((CPAU.RevistaNotas.Data.UrlTarget)contenido.Contenido.UrlTarget)">
                                        <img style="width: 400px; height: 300px;" class="img-gray" src="@Url.Media(contenido.Contenido.Imagen)" alt="" />
                                        <div class="label">
                                            <div class="label-text">
                                                <span class="text-title">@contenido.Contenido.Titulo</span>
                                                <span class="text-category">@string.Join(", ", contenido.Contenido.Autores.Select(x => x.Autor.Nombre))</span>
                                            </div>
                                            <div class="label-bg"></div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                    <!-- /Notas -->
                </div>
                <!-- /Mixitup -->
            </div>
        </div>
        <!-- /Contenido -->
        <!-- Visualizaci&oacute;n -->
        <div class="row">
            <div class="col-lg-12" style="margin:0; padding:0;">

                <div style="border-top:1px solid #ccc; margin:40px 0 30px 0; padding:0; ">

                    <div class="text-center" style="margin:60px 0 -20px 0; padding:0;">
                        <h3>Autores</h3>
                        <p>Todos estos autores escriben en este número:</p>
                    </div>

                    <!-- Swiper -->
                    <div class="swiper-container scautores swiper2">
                        <div class="swiper-wrapper">
                            @{
                                var autores = Model.Contenidos.SelectMany(x => x.Contenido.Autores).Select(a => a.Autor).ToList();
                                var distinctAutores = autores.Distinct(new AutorViewModelEqualityComparer());
                                foreach (var autor in distinctAutores)
                                {
                                    <div class="swiper-slide ssautores">
                                        <div>
                                            <a href="@Url.Action("Autor", "Autores", new {autor.Id})">
                                                @if (string.IsNullOrEmpty(autor.ImagenPerfil))
                                                {
                                                    <span class="fa-stack fa-lg" style="font-size: 80px;">
                                                        <i class="fa fa-circle fa-stack-2x fa-inverse" style="color: #ccc;"></i>
                                                        <i class="fa fa-user fa-stack-1x fa-inverse"></i>
                                                    </span>
                                                }
                                                else
                                                {
                                                    <img class="img-circle center-block" src="@Url.Media(autor.ImagenPerfil)" width="150" height="150" alt="" />
                                                }

                                            </a>
                                            <h4 style="text-align: center;">@autor.Nombre</h4>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <!-- Add Pagination -->
                        <!--<div class="swiper-pagination swiper-pagination2 swiper-pagination-m"></div>-->
                        <!-- Add Arrows -->
                        <div class="swiper-button-next swiper-button-next2 swiper-button-m"></div>
                        <div class="swiper-button-prev swiper-button-prev2 swiper-button-m"></div>
                    </div>
                    <!-- /Swiper -->
                </div>
            </div>
        </div>
        <!-- /Visualizaci&oacute;n -->

    </div>
</article>
<!-- /CONTENIDO -->

@Html.Partial("_Footer", new FooterViewModel
{
    ShowBreadCrumb = true,
    TagName = "footer id=\"footer\"",
    BreadCrumbItems = {
new BreadCrumbItem { Caption = "Home", Href = "/" },
new BreadCrumbItem { Caption = "Revista", Href = "/revistas" },
new BreadCrumbItem { Caption = "# " + Model.Numero + " - " + Model.Descripcion, Href = "/revistas/" + Model.Numero }
}
})

@section scripts
    {
    <!-- Swiper JS -->
    <script src="/js/swiper.min.js"></script>

    <!-- Initialize Swiper -->
    <script>
        var swiperContainer = $('.swiper1');
        if (swiperContainer != null) {
            var swiper1 = new Swiper(swiperContainer,
                {
                    pagination: '.swiper-pagination1',
                    paginationClickable: true,
                    nextButton: '.swiper-button-next',
                    prevButton: '.swiper-button-prev',
                    parallax: true,
                    speed: 600
                });
        }

        var swiper2 = new Swiper('.swiper2',
            {
                pagination: '.swiper-pagination2',
                nextButton: '.swiper-button-next2',
                prevButton: '.swiper-button-prev2',
                slidesPerView: 3,
                centeredSlides: true,
                paginationClickable: true,
                spaceBetween: 30,
                autoplay: 4000,
                autoplayDisableOnInteraction: false
            });

    </script>

    <!-- Parallax -->
    <script src="/js/parallax.js"></script>
    <script>

        // Pretty simple huh?
        var scene = document.getElementById('scene');
        var parallax = new Parallax(scene);

    </script>

    <!-- Isotope -->
    <script src="/js/isotope.pkgd.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.portfolioContenedor').isotope({
                filter: '*',
                sortBy: 'original-order',
                //itemSelector: '.portfolio',
                resizable: false,
                masonry: {
                    columnWidth: 10,
                    isFitWidth: true
                },
                animationOptions: {
                    duration: 750,
                    easing: 'linear',
                    queue: false
                }
            });

            $('#filters a')
                .click(function () {
                    $('#filters .active').removeClass('active');
                    $(this).addClass('active');

                    var selector = $(this).attr('data-filter');
                    $('.portfolioContenedor').isotope({
                        filter: selector,
                        resizable: false,
                        sortBy: 'original-order',
                        masonry: {
                            columnWidth: 10,
                            isFitWidth: true
                        },
                        animationOptions: {
                            duration: 750,
                            easing: 'linear',
                            queue: false
                        }
                    });
                    return false;
                });
        });
    </script>
}